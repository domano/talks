// Code generated by MockGen. DO NOT EDIT.
// Source: objects (interfaces: Flyable)

package objects

import (
	gomock "github.com/golang/mock/gomock"
)

// MockFlyable is a mock of Flyable interface
type MockFlyable struct {
	ctrl     *gomock.Controller
	recorder *MockFlyableMockRecorder
}

// MockFlyableMockRecorder is the mock recorder for MockFlyable
type MockFlyableMockRecorder struct {
	mock *MockFlyable
}

// NewMockFlyable creates a new mock instance
func NewMockFlyable(ctrl *gomock.Controller) *MockFlyable {
	mock := &MockFlyable{ctrl: ctrl}
	mock.recorder = &MockFlyableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockFlyable) EXPECT() *MockFlyableMockRecorder {
	return _m.recorder
}

// MoveTo mocks base method
func (_m *MockFlyable) MoveTo(_param0 Point) {
	_m.ctrl.Call(_m, "MoveTo", _param0)
}

// MoveTo indicates an expected call of MoveTo
func (_mr *MockFlyableMockRecorder) MoveTo(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MoveTo", arg0)
}
