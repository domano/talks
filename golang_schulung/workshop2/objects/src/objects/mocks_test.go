// Automatically generated by MockGen. DO NOT EDIT!
// Source: objects (interfaces: Flyable)

package objects

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Flyable interface
type MockFlyable struct {
	ctrl     *gomock.Controller
	recorder *_MockFlyableRecorder
}

// Recorder for MockFlyable (not exported)
type _MockFlyableRecorder struct {
	mock *MockFlyable
}

func NewMockFlyable(ctrl *gomock.Controller) *MockFlyable {
	mock := &MockFlyable{ctrl: ctrl}
	mock.recorder = &_MockFlyableRecorder{mock}
	return mock
}

func (_m *MockFlyable) EXPECT() *_MockFlyableRecorder {
	return _m.recorder
}

func (_m *MockFlyable) MoveTo(_param0 Point) {
	_m.ctrl.Call(_m, "MoveTo", _param0)
}

func (_mr *_MockFlyableRecorder) MoveTo(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MoveTo", arg0)
}
